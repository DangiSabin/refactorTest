
----------------------------------------------------------------------------------------------
Acme_Semi background
----------------------------------------------------------------------------------------------
Acme_Semi is a semiconductor company that manufactures both photomasks (masks) and Integrated Circuits (chips).
Acme_Semi has an ordering system for both masks and chips.

The java code and class structure the company has developed for the system is lacking in many ways.
The object design currently is as follows:
There is an OrderRepository where all orders are stored
Associated with each order is a Customer which has a list of each of the different types of orders.
The orders are comprised of multiple Layers.  Each layer has an associated collection of DataPoints to form a pattern.
Associated with each order is also a scaling and a shift value for all the layers in the order.
There is a ProcessOrderService that processes each order
There is a LogService for generating output


The java package structure for the system is com.acme_semi
There is a test class for the system called AcmeSemiSystemTest in com.acme_semi.test that invokes the processeOrderService for each order and produces expected results for the order system.
AcmeSemiSystemTest can be run as a java application

----------------------------------------------------------------------------------------------
Enter UberChip
----------------------------------------------------------------------------------------------
Acme_Semi has been recently acquired by UberChip.  All of the Acme_Semi developers have retired or left for other companies.
Your job is to take ownership of the new UberChip ordering system drawing from functionality of the previous Acme_Semi ordering system.
You must refactor the java code, classes, comments etc.
There are many opportunities to improve the code for clarity, legibility, maintainability, conciseness, improved standards, documentation, etc.
For this assignment, time is limited for this first refactoring pass.
A new set of packages mirroring com.acme_semi has been created as com.uberchip
The codebases are the same.

----------------------------------------------------------------------------------------------
The challenge
----------------------------------------------------------------------------------------------
Your task is to work with the com.uberchip packages and classes to make code improvements, change and re-arrange the classes according to your expertise
The code can be changed in virtually any way, however the output generated by the new UberChipSystemTest must match the original output from AcmeSemiSystemTest

* Your updated uberchip code should not have any references in it to the old acme_semi packages or classes
* The com.acme_semi itself must remain unchanged
* Also, no changes are allowed to the com.test CompareSystemsTest class
 
The ultimate test will be to run com.test.CompareSystemsTest to verify that the new uberchip system test output matches the original acme_semi output

To get started, verify that com.acme_semi.test.AcmeSemiSystemTest runs correctly
then, verify that com.uberchip.test.UberChipSystemTest runs correctly

Finally, an initial run of com.test.CompareSystemsTest should indicate that both systems in their initial state produce equivalent output as the two codebases initially match

...so dig into com.uberchip... and start refactoring!

